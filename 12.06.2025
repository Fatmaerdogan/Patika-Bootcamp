# SQL String (Metin) İşlemleri

SQL'de **string** işlemleri, veritabanındaki metin verilerini analiz etmek, değiştirmek, biçimlendirmek ve karşılaştırmak için kullanılır.

## Fonksiyonlar ve Açıklamaları

| Fonksiyon                  | Açıklama                                                           |
|----------------------------|---------------------------------------------------------------------|
| **LENGTH() / LEN()**       | Metnin karakter sayısını döner                                     |
| **UPPER()**                | Tüm harfleri büyük yapar                                           |
| **LOWER()**                | Tüm harfleri küçük yapar                                           |
| **TRIM()**                 | Baş ve sondaki boşlukları siler                                    |
| **LTRIM()**                | Baştaki boşlukları siler                                           |
| **RTRIM()**                | Sondaki boşlukları siler                                           |
| **SUBSTRING()**            | Belirli bir pozisyondan itibaren parça alır                        |
| **REPLACE()**              | Alt metni başka bir metinle değiştirir                             |
| **CONCAT()**               | İki ya da daha fazla metni birleştirir                              |
| **LIKE**                   | Kalıpla eşleşen değerleri döner                                    |
| **INSTR() / CHARINDEX()**  | Alt metnin pozisyonunu döner                                       |
| **LEFT(str, n)**           | Soldan n karakter alır                                             |
| **RIGHT(str, n)**          | Sağdan n karakter alır                                             |
| **REVERSE()**              | Metni ters çevirir                                                 |
| **CAST() / CONVERT()**     | Sayıyı veya tarihi metne çevirir                                   |

---

Bu temel string fonksiyonları veritabanında veri temizleme, analiz ve raporlama işlemlerinde sıklıkla kullanılır.


///////////////////////////////////////////////////////////////////

---SUBSTRING

SELECT SUBSTRING(NAMESURNAME,1,4)SUBSTRING_,NAMESURNAME FROM USERS

SELECT SUBSTRING(TELNR1,1,3) FROM USERS

SELECT SUBSTRING(BIRTHDATE,1,3) FROM USERS --VERI TIPINE DIKKAT

---CHARINDEX

SELECT CHARINDEX('Z',NAMESURNAME,1),NAMESURNAME FROM USERS

---CONCAT
SELECT 'MERT'+'ALABAŞ'
SELECT 'MERT'+' '+'ALABAŞ'

SELECT CONCAT('MERT','ALABAŞ')
SELECT CONCAT('MERT',' ','ALABAŞ')

SELECT USERNAME_+' '+PASSWORD_ AS YENI,* FROM USERS

SELECT CONCAT(USERNAME_,' ',PASSWORD_)AS YENIKOLON, * FROM USERS

SELECT NAMESURNAME+'----------'+GENDER,* FROM USERS
SELECT CONCAT(NAMESURNAME,'-----',GENDER) FROM USERS


---LEFT,RIGHT,LEN

SELECT LEFT(BIRTHDATE,4)YIL,BIRTHDATE FROM USERS
SELECT RIGHT(BIRTHDATE,5),BIRTHDATE FROM USERS

SELECT RIGHT(EMAIL,16),EMAIL FROM USERS

SELECT LEN(USERNAME_),USERNAME_ FROM USERS

SELECT LEN(PASSWORD_),PASSWORD_ FROM USERS

----LTRIM,RTRIM

SELECT LTRIM(' MERT') FROM USERS
SELECT RTRIM('MERT ')

-----LOWER,UPPER,REVERSE

SELECT LOWER(USERNAME_),USERNAME_ FROM USERS

SELECT LOWER(USERNAME_)KUCUK,UPPER(NAMESURNAME)BUYUKISIM,* FROM USERS

SELECT REVERSE(NAMESURNAME),NAMESURNAME FROM USERS



----YUVARLAMA

SELECT ROUND(TOTALPRICE,0),TOTALPRICE FROM ORDERS
SELECT FLOOR(TOTALPRICE) FROM ORDERS
SELECT CEILING(TOTALPRICE) FROM ORDERS


---TARİHSEL İŞLEMLER

SELECT * FROM ORDERS

--mm/dd/yyyy
SELECT CONVERT(varchar,DATE_,101)TARIH,DATE_ FROM ORDERS

--yyyy.mm.dd
select CONVERT(varchar,DATE_,102),DATE_ from ORDERS

---dd.mm.yyyy
select CONVERT(varchar,DATE_,104),DATE_ from ORDERS

---dd mon yyyy
select CONVERT(varchar,DATE_,106),DATE_ from ORDERS

--hh:mm:ss
select CONVERT(varchar,DATE_,112),DATE_ from ORDERS

--yyyymmdd
select CONVERT(varchar,DATE_,10),DATE_ from ORDERS

----DATEDIFF

select GETDATE()

select MAX(DATE_) from ORDERS

SELECT DATEDIFF(DAY,MAX(DATE_),
GETDATE()) AS FARK,MAX(DATE_) AS MAXDATE,GETDATE() AS BUGUN FROM ORDERS


SELECT * FROM ORDERS WHERE CONVERT(varchar,DATE_,112)=CONVERT(varchar,getdate(),112)-1

---20250612    20200325


----DATEADD

SELECT DATEADD(DAY,0,GETDATE()) AS YENITARIH,* FROM ORDERS
STOK

URUNLER,STOKMIKTARI,SUBELER,ETLZAMANI


---DATEPART

SELECT DATEPART(DAY,DATE_)GUN, DATEPART(YEAR,DATE_)YIL, DATEPART(MONTH,DATE_)AY, DATE_ FROM ORDERS


SELECT * FROM ORDERS WHERE YEAR(DATE_)=2020 AND MONTH(DATE_)=3

----


----

SELECT 
CASE WHEN 
   GENDER='K' THEN 'KADIN'
   WHEN GENDER='E' THEN 'ERKEK' ELSE GENDER END AS CINSIYETTANIM,
GENDER
FROM USERS 

SELECT 
CASE WHEN 
   GENDER='K' THEN 'KADIN'
   ELSE GENDER END AS CINSIYETTANIM,
GENDER
FROM USERS 

SELECT 
CASE WHEN AGE BETWEEN 10 AND 30 THEN 'GENC'
     WHEN AGE BETWEEN 31 AND 45 THEN 'ORTA YAS'
     WHEN AGE BETWEEN 46 AND 50 THEN 'ORTA UST'
	 WHEN AGE>50 THEN 'YASLI'
     ELSE 'BOS'
     END AS YASGRUP,
AGE
FROM USERS

SELECT * FROM ORDERDETAILS

SELECT 
CASE WHEN LINETOTAL BETWEEN 10 AND 30 THEN 'AZ GELIR'
     WHEN LINETOTAL BETWEEN 31 AND 50 THEN 'ORTA GELIR'
     WHEN LINETOTAL BETWEEN 51 AND 99 THEN 'YUKSEK GELIR'
	 WHEN LINETOTAL>100 THEN 'EN YUKSEK GELIR'
     ELSE 'BILGIYOK'
     END AS GELIRGRUP,
LINETOTAL
FROM ORDERDETAILS

SELECT 
    CASE 
        WHEN CONVERT(FLOAT, LINETOTAL) BETWEEN 10 AND 300 THEN 'AZ GELİR'
        WHEN CONVERT(FLOAT, LINETOTAL) BETWEEN 310 AND 500 THEN 'ORTA GELİR'
        WHEN CONVERT(FLOAT, LINETOTAL) BETWEEN 510 AND 990 THEN 'YÜKSEK GELİR'
        WHEN CONVERT(FLOAT, LINETOTAL) > 1000 THEN 'EN YÜKSEK GELİR'
        ELSE 'BİLGİ YOK'
    END AS GELIRGRUP,
    LINETOTAL
FROM ORDERDETAILS
WHERE ISNUMERIC(LINETOTAL) = 1;

---------SUB QUERY
SELECT * FROM SALEORDERS
WHERE BRAND = (SELECT DISTINCT BRAND FROM ITEMS WHERE BRAND = 'ÜLKER');

SELECT * FROM USERS
WHERE ID IN (SELECT USERID FROM ORDERS WHERE STATUS_='2')

SELECT * FROM SALEORDERS WHERE 
ITEMCODE IN (SELECT ITEMCODE FROM ITEMS WHERE CATEGORY3='PIL')

SELECT NAME, SURNAME, SUM(AMOUNT) ADET FROM ORDERS O
INNER JOIN ORDERDETAILS OD ON O.ID=OD.ORDERID
INNER JOIN USERS U ON U.ID=O.USERID
WHERE AGE=85 AND 
ITEMID IN (SELECT ITEMID FROM ITEMS WHERE CATEGORY3='KIRTASIYE')
GROUP BY NAME, SURNAME
ORDER BY ADET DESC

SELECT NAME, SURNAME, SUM(AMOUNT) ADET FROM ORDERS O
INNER JOIN ORDERDETAILS OD ON O.ID=OD.ORDERID
INNER JOIN USERS U ON U.ID=O.USERID
WHERE AGE=85 AND YEAR(DATE_) = 2020 AND 
ITEMID IN (SELECT ITEMID FROM ITEMS WHERE CATEGORY3='KIRTASIYE')
GROUP BY NAME, SURNAME
ORDER BY 2 DESC
